<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Technology on Richard A. Lent, Ph.D.</title>
    <link>https://richardlent.github.io/topics/technology/</link>
    <description>Recent content in Technology on Richard A. Lent, Ph.D.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Richard A. Lent. All rights reserved.</copyright>
    <lastBuildDate>Fri, 19 May 2017 14:32:00 -0400</lastBuildDate>
    
	<atom:link href="https://richardlent.github.io/topics/technology/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Comment About Comments</title>
      <link>https://richardlent.github.io/post/a-comment-about-comments/</link>
      <pubDate>Fri, 19 May 2017 14:32:00 -0400</pubDate>
      
      <guid>https://richardlent.github.io/post/a-comment-about-comments/</guid>
      <description>Reading time: 1 minute(s) @ 200 WPM.
Readers of this website (if any) may have noticed that I recently implemented Disqus comments. This is very easy to do in a Hugo-generated website. Sign up for a free Disqus account, put your Disqus shortname (basically your account ID) into your Hugo configuration file, and Hugo takes care of generating all the necessary code when it creates your static website. Disqus sends you email notifications whenever somebody writes a comment, and you can moderate comments, write replies, delete comments, mark comments as spam, and yada yada yada.</description>
    </item>
    
    <item>
      <title>How I Deploy My Website to GitHub Using RStudio, blogdown, and Hugo</title>
      <link>https://richardlent.github.io/post/how-i-deploy-my-website-to-github-using-rstudio-blogdown-and-hugo/</link>
      <pubDate>Wed, 17 May 2017 12:02:00 -0400</pubDate>
      
      <guid>https://richardlent.github.io/post/how-i-deploy-my-website-to-github-using-rstudio-blogdown-and-hugo/</guid>
      <description>Reading time: 3 minute(s) @ 200 WPM.
I have worked for days trying to get this website up and running on GitHub Pages. I think I finally have gotten it to work.
This is that story.
I have studied the following sources of punditage:
 Making a Website Using Blogdown, Hugo, and GitHub pages Update: Deploying Hugo-generated websites on personal GitHub Pages How to make a GitHub pages blog with RStudio and Hugo Including image using blogdown Building a Blog with Blogdown and GitHub The Hugo documentation Create Blogs and Websites with R Markdown Hosting on GitHub Pages Build_Site and Serve_Site Output Issues Create a Free Personal Academic Website with Hugo  All of the articles and discussions were enlightening, and helped me arrive at what I believe to be the simplest way to deploy a Hugo-generated website on GitHub Pages, at least for me.</description>
    </item>
    
    <item>
      <title>Musings on blogdown and Hugo</title>
      <link>https://richardlent.github.io/post/musings-on-blogdown-and-hugo/</link>
      <pubDate>Mon, 15 May 2017 11:56:48 -0400</pubDate>
      
      <guid>https://richardlent.github.io/post/musings-on-blogdown-and-hugo/</guid>
      <description>Reading time: 4 minute(s) @ 200 WPM.
I am a huge fan of R and RStudio, especially relative to their use in creating reproducible research (see RStudio as a Research and Writing Platform). I was thus thrilled to learn that a new R package, blogdown, was being developed for producing websites from R Markdown files using RStudio and the static website generator, Hugo.
This website was built and is maintained using blogdown and Hugo running inside of RStudio, and is hosted on GitHub Pages.</description>
    </item>
    
    <item>
      <title>The Plain Text Workflow</title>
      <link>https://richardlent.github.io/post/the-plain-text-workflow/</link>
      <pubDate>Thu, 11 May 2017 15:38:00 -0400</pubDate>
      
      <guid>https://richardlent.github.io/post/the-plain-text-workflow/</guid>
      <description>Reading time: 12 minute(s) @ 200 WPM.
The Plain Text Workflow is an alternative to writing with a word processor. Mind you, I said writing, not typesetting or formatting, which is a major part of what word processors do. The idea of the plain text workflow is that you separate the act of writing from that of producing a formatted, typeset final document. You initially capture your words using a plain text editor, perhaps using a lightweight formatting language like Markdown.</description>
    </item>
    
    <item>
      <title>Google Search</title>
      <link>https://richardlent.github.io/post/google-search/</link>
      <pubDate>Mon, 08 May 2017 14:54:00 -0400</pubDate>
      
      <guid>https://richardlent.github.io/post/google-search/</guid>
      <description>Reading time: 2 minute(s) @ 200 WPM.
Following the directions for Google’s Custom Search Engine, with additional help from How I added search to my static blog, I have added a local search function to this website. It’s on the sidebar menu, with an adorable magnifying glass icon from Font Awesome Icons, and it basically works.
This search function will, in all likelihood, probably search only the specific content of richardlent.</description>
    </item>
    
  </channel>
</rss>